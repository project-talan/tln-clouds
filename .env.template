TF_TOKEN_app_terraform_io=

TF_VAR_org_id=
TF_VAR_project_id=
TF_VAR_group_id=
TF_VAR_env_id=
TF_VAR_tenant_id=

TF_VAR_account_id=

TF_VAR_registry=
TF_VAR_repositories=["dev.myproject.backend.services.iam","dev.myproject.web.landing"]
TF_VAR_image_tag_mutability=

TF_VAR_domain_name=myproject.dev
TF_VAR_dns_records=<env_id>.myproject.dev.,api
TF_VAR_use_primary_domain=false
TF_VAR_api_base_url=https://api.<env_id>.myproject.dev

TF_VAR_postgresql={ size = "db.t4g.micro", allocated_storage = "20", max_allocated_storage = "30", master_user_password = true, engine_version = "17.4", family = "postgres17", major_engine_version = "17", multi_az = false, manage_master_user_password = true, backup_schedule = "cron(0 */2 * * ? *)", backup_lifecycle_delete_after = 97, backup_lifecycle_coldstorage_after = 7, rds_snapshot_identifier = null }
TF_VAR_databases={ "iam" = { owner = "admin", password = "admin" }, "notify" = { owner = "admin", password = "admin" } }

TF_VAR_db_instance_identifier=
TF_VAR_tenant_databases={}
TF_VAR_user_pool_id=
TF_VAR_identity_providers=
TF_VAR_identity_providers={"demo-oidc":{"provider_type":"OIDC","provider_details":{"attributes_request_method":"POST","attributes_url":"https://idp.<env_id>.myproject.dev/realms/demo/protocol/openid-connect/userinfo","authorize_scopes":"openid profile email","authorize_url":"https://idp.<env_id>.myproject.dev/realms/demo/protocol/openid-connect/auth","client_id":"demo","client_secret":"Y9XantNY0BSk8CXZysXr9Q7QulCZDCIA","jwks_uri":"https://idp.<env_id>.myproject.dev/realms/demo/protocol/openid-connect/certs","oidc_issuer":"https://idp.<env_id>.myproject.dev/realms/demo","token_url":"https://idp.<env_id>.myproject.dev/realms/demo/protocol/openid-connect/token"}}}
